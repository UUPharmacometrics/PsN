#!/etc/bin/perl

# Blackbox testing of vpc data MDV filtering, formatting to DV matrix and percentile calculation

use strict;
use warnings;
use File::Path 'rmtree';
use Test::More;
use FindBin qw($Bin);
use lib "$Bin/.."; #location of includes.pm
use includes; #file with paths to PsN packages and $path variable definition

our $tempdir = create_test_dir('system_vpcinterval');


my $truematrix=
[[1.7300E+01,1.5591E+01,2.0031E+01,1.3769E+01,1.7572E+01,1.3515E+01,4.1674E+01,2.6360E+01,9.6451E+00,4.4075E+01,1.1120E+01,2.2924E+01,2.9936E+01,1.4643E+01,1.5146E+01,3.2476E+01,2.2444E+01,1.7241E+01,3.6800E+01,2.0314E+01,1.3952E+01],
[3.1000E+01,1.8051E+01,5.3670E+00,2.7881E+01,3.0443E+01,2.0577E+01,3.6862E+01,1.6333E+01,2.0312E+01,5.5049E+01,6.7787E+00,1.7325E+01,2.8790E+01,2.2330E+01,3.4794E+01,1.8869E+01,4.1535E+01,2.5998E+01,4.4654E+01,2.1930E+01,2.3584E+01],
[9.7000E+00,1.0010E+01,6.6823E+00,2.5296E+01,1.1777E+01,8.2582E+00,9.1992E+00,1.0347E+01,9.0354E+00,2.4774E+01,3.6220E+00,2.2194E+01,7.1866E+00,1.2696E+01,1.2647E+01,1.5040E+01,8.5446E+00,1.3799E+01,1.1317E+01,1.1198E+01,9.7341E+00],
[2.4600E+01,1.2944E+01,1.7438E+01,3.5363E+01,1.9665E+01,1.9184E+01,2.0787E+01,2.0402E+01,1.2792E+01,4.3881E+01,6.4175E+00,9.2468E+00,2.0307E+01,1.5785E+01,1.8945E+01,5.5304E+00,3.0660E+01,1.4447E+01,1.3883E+01,1.3475E+01,1.1894E+01],
[3.3000E+01,1.5360E+01,2.8857E+01,4.1573E+01,1.4674E+01,2.1353E+01,1.8643E+01,2.3837E+01,1.3725E+01,2.7978E+01,1.1532E+01,1.1506E+01,2.2681E+01,2.8628E+01,3.1152E+01,7.1955E+00,3.4408E+01,1.2978E+01,2.9378E+01,2.8724E+01,1.6648E+01],
[1.8000E+01,3.1017E+01,2.7790E+01,1.2611E+01,4.2267E+01,6.3467E+01,1.7030E+01,3.1326E+01,1.2408E+01,1.9882E+01,2.8765E+01,4.4509E+01,2.3291E+01,1.7565E+01,7.6072E+01,2.6957E+01,2.4737E+01,1.8135E+01,9.9332E+00,9.5163E+01,4.4484E+01],
[2.3800E+01,7.4396E+01,1.7709E+01,1.8093E+01,3.8484E+01,2.7120E+01,1.3313E+01,2.6869E+01,7.8002E+00,2.0287E+01,3.5437E+01,2.7662E+01,5.1730E+01,1.4850E+01,1.0677E+01,2.5574E+01,1.9568E+01,2.4785E+01,2.2459E+01,3.6731E+01,2.1109E+01],
[2.4300E+01,6.2750E+01,1.5350E+01,1.8438E+01,8.0823E+01,3.9859E+01,2.0170E+01,4.1288E+01,8.5666E+00,2.5166E+01,3.8292E+01,5.1612E+01,4.0940E+01,2.0955E+01,1.5662E+01,1.6456E+01,2.7772E+01,3.0969E+01,2.4303E+01,4.1460E+01,2.5715E+01],
[2.0800E+01,9.5389E+00,1.5338E+01,1.4445E+01,2.5792E+01,1.3253E+01,2.5798E+01,2.7878E+01,1.3829E+01,6.9883E+01,1.2768E+01,3.9048E+01,2.5203E+01,2.0345E+01,2.5140E+01,3.9674E+01,1.0581E+01,1.1960E+01,1.9636E+01,9.6531E+00,1.2260E+01],
[2.3900E+01,1.0886E+01,2.6158E+01,1.8047E+01,9.2489E+00,7.6242E+00,2.1762E+00,9.1342E+00,1.5458E+01,1.4090E+01,6.6809E+00,1.5991E+01,3.8486E+01,1.8745E+01,2.5570E+01,3.5589E+01,8.2638E+00,1.0041E+01,2.1589E+01,1.0408E+01,1.9365E+01],
[3.1700E+01,1.7173E+01,2.1593E+01,1.8365E+01,1.2611E+01,4.2403E+00,2.5694E+00,4.3800E+00,2.0128E+01,1.4207E+01,4.2712E+00,1.4334E+01,3.5601E+01,2.2856E+01,1.7276E+01,4.7450E+01,1.3094E+01,1.0465E+01,1.8011E+01,2.0041E+01,2.2084E+01],
[1.4200E+01,2.8140E+01,3.1147E+01,1.8272E+01,2.7887E+01,1.0598E+01,2.3642E+01,1.9953E+01,1.9108E+01,6.6126E+01,3.2380E+01,5.3485E+01,3.9172E+01,4.9668E+01,4.1326E+01,1.7834E+01,1.6922E+01,1.3200E+01,4.2711E+01,4.0441E+01,1.5312E+01],
[1.8200E+01,3.1659E+01,3.3038E+01,1.1651E+01,1.4606E+01,1.5116E+01,1.4372E+01,1.4196E+01,1.5405E+01,5.0334E+01,1.9695E+01,2.2798E+01,3.8542E+00,1.3561E+01,4.1500E+01,2.2815E+01,1.4941E+01,1.6497E+01,9.7226E+00,3.4961E+01,1.3322E+01],
[2.0300E+01,2.4413E+01,2.6872E+01,1.5122E+01,1.3011E+01,1.5815E+01,1.4066E+01,1.1707E+01,1.3943E+01,5.8246E+01,2.3638E+01,1.3089E+01,2.8958E+00,1.4803E+01,3.3724E+01,2.7012E+01,2.7838E+01,1.2594E+01,8.0155E+00,4.3732E+01,1.4615E+01]
];

my $truematrix2 = [
          [
            '1.7300E+01',
            '1.2865E+01',
            '2.2851E+01',
            '4.1174E+01',
            '3.8198E+01',
            '3.1240E+01',
            '7.1362E+00',
            '1.6347E+01',
            '1.0629E+01',
            '2.8517E+01',
            '2.6231E+01',
            '1.6445E+01',
            '1.3346E+01',
            '1.4097E+01',
            '4.3318E+01',
            '1.4038E+01',
            '2.1640E+01',
            '2.3963E+01',
            '2.0572E+01',
            '6.4091E+01',
            '3.4030E+01'
          ],
          [
            '3.1000E+01',
            '1.4975E+01',
            '1.9606E+01',
            '3.0922E+01',
            '9.1525E+00',
            '5.2853E+01',
            '1.9600E+01',
            '4.9953E+00',
            '2.1263E+01',
            '2.3562E+01',
            '3.4718E+01',
            '2.1680E+01',
            '7.4937E+00',
            '2.2535E+01',
            '2.3279E+01',
            '2.5290E+01',
            '1.5571E+01',
            '3.1376E+01',
            '1.8025E+01',
            '4.8318E+01',
            '1.8258E+01'
          ],
          [
            '9.7000E+00',
            '8.6597E+00',
            '1.1455E+01',
            '4.0559E+00',
            '1.1713E+01',
            '5.5227E+00',
            '1.4604E+01',
            '1.4695E+01',
            '1.2987E+01',
            '1.1766E+01',
            '1.6806E+01',
            '1.7164E+01',
            '3.2012E+01',
            '2.4645E+01',
            '1.5241E+01',
            '7.0673E+00',
            '8.7165E+00',
            '2.6216E+01',
            '1.4841E+01',
            '1.3859E+01',
            '1.7748E+01'
          ],
          [
            '2.4600E+01',
            '1.8371E+01',
            '1.6332E+01',
            '1.5534E+01',
            '2.0345E+01',
            '1.3261E+01',
            '2.6001E+01',
            '2.1538E+01',
            '2.1508E+01',
            '1.6569E+01',
            '3.2794E+01',
            '3.0364E+01',
            '3.0994E+01',
            '1.5409E+01',
            '1.0421E+01',
            '9.9570E+00',
            '1.8996E+01',
            '1.3619E+01',
            '1.3009E+01',
            '1.1764E+01',
            '1.9074E+01'
          ],
          [
            '3.3000E+01',
            '2.2787E+01',
            '2.7417E+01',
            '2.4782E+01',
            '3.1212E+01',
            '2.7631E+01',
            '1.6532E+01',
            '3.2687E+01',
            '2.3271E+01',
            '4.0419E+01',
            '5.3279E+01',
            '5.8475E+01',
            '2.9155E+01',
            '3.3368E+01',
            '8.5871E+00',
            '9.8013E+00',
            '2.3190E+01',
            '1.5251E+01',
            '9.8099E+00',
            '2.5681E+01',
            '2.1461E+01'
          ],
          [
            '1.8000E+01',
            '5.4454E+01',
            '2.2939E+01',
            '3.6589E+01',
            '5.8971E+01',
            '2.6006E+01',
            '3.3084E+01',
            '1.1072E+01',
            '4.0532E+01',
            '2.8084E+01',
            '2.1486E+01',
            '2.1576E+01',
            '4.0318E+01',
            '3.2029E+01',
            '2.5259E+01',
            '2.1669E+01',
            '6.0546E+01',
            '3.2015E+01',
            '1.5268E+01',
            '3.2488E+01',
            '2.9252E+01'
          ],
          [
            '2.3800E+01',
            '4.4386E+01',
            '2.5907E+01',
            '2.0881E+01',
            '2.4847E+01',
            '1.7830E+01',
            '2.7172E+01',
            '1.7936E+01',
            '6.4650E+01',
            '3.3793E+01',
            '2.6016E+01',
            '2.2547E+01',
            '5.6558E+01',
            '2.5132E+01',
            '2.9872E+01',
            '2.1833E+01',
            '1.4216E+01',
            '3.1962E+01',
            '1.5419E+01',
            '3.7237E+01',
            '3.8058E+01'
          ],
          [
            '2.4300E+01',
            '5.1480E+01',
            '2.8524E+01',
            '2.7578E+01',
            '3.6659E+01',
            '2.3172E+01',
            '3.4025E+01',
            '2.2941E+01',
            '7.2123E+01',
            '4.6522E+01',
            '4.0362E+01',
            '2.7210E+01',
            '5.9719E+01',
            '2.3186E+01',
            '3.0811E+01',
            '2.7318E+01',
            '1.9672E+01',
            '3.7029E+01',
            '1.8118E+01',
            '4.8888E+01',
            '3.3014E+01'
          ],
          [
            '2.0800E+01',
            '1.9896E+01',
            '1.9460E+01',
            '3.5739E+01',
            '7.4901E+00',
            '2.9594E+01',
            '1.7134E+01',
            '2.2718E+01',
            '2.0239E+01',
            '8.6208E+00',
            '1.0057E+01',
            '2.1742E+01',
            '1.4702E+01',
            '7.3127E+00',
            '1.3942E+01',
            '1.2914E+01',
            '1.4503E+01',
            '2.3135E+01',
            '2.1229E+01',
            '3.1199E+01',
            '1.2980E+01'
          ],
          [
            '2.3900E+01',
            '1.4181E+01',
            '1.2194E+01',
            '2.0179E+01',
            '2.1274E+01',
            '1.8588E+01',
            '9.5873E+00',
            '1.0098E+01',
            '2.1286E+01',
            '7.5049E+00',
            '1.0897E+01',
            '1.5223E+01',
            '1.5253E+01',
            '6.7379E+00',
            '1.2001E+01',
            '4.2844E+00',
            '1.3860E+01',
            '1.2552E+01',
            '1.7850E+01',
            '1.3641E+01',
            '2.4375E+01'
          ],
          [
            '3.1700E+01',
            '1.4409E+01',
            '1.0854E+01',
            '2.2848E+01',
            '1.9827E+01',
            '1.9707E+01',
            '6.1549E+00',
            '9.8546E+00',
            '3.5702E+01',
            '7.7154E+00',
            '1.2904E+01',
            '1.5869E+01',
            '1.0206E+01',
            '7.3848E+00',
            '1.2534E+01',
            '6.5598E+00',
            '1.1180E+01',
            '1.5696E+01',
            '1.1274E+01',
            '1.5379E+01',
            '2.9155E+01'
          ],
          [
            '1.4200E+01',
            '4.3297E+01',
            '5.0095E+01',
            '9.8645E+00',
            '3.7407E+01',
            '2.7321E+01',
            '2.6521E+01',
            '2.0719E+01',
            '2.6719E+01',
            '4.8261E+01',
            '1.2948E+01',
            '1.2029E+01',
            '8.5851E+00',
            '8.7051E+00',
            '1.4139E+01',
            '3.5981E+01',
            '2.2425E+01',
            '9.0495E+00',
            '2.8620E+01',
            '1.3449E+01',
            '3.0738E+01'
          ],
          [
            '1.8200E+01',
            '3.7950E+01',
            '4.2780E+01',
            '1.4091E+01',
            '3.6821E+01',
            '2.2528E+01',
            '3.1787E+01',
            '2.4329E+01',
            '1.2911E+01',
            '3.0086E+01',
            '9.5843E+00',
            '6.9041E+00',
            '1.7539E+01',
            '1.2914E+01',
            '7.5056E+00',
            '3.2900E+01',
            '2.0997E+01',
            '2.0000E+01',
            '2.9167E+01',
            '1.4409E+01',
            '3.1092E+01'
          ],
          [
            '2.0300E+01',
            '3.0877E+01',
            '4.7580E+01',
            '1.7230E+01',
            '2.7467E+01',
            '3.4170E+01',
            '2.7435E+01',
            '3.6372E+01',
            '9.3103E+00',
            '1.7593E+01',
            '1.6615E+01',
            '8.5769E+00',
            '3.0253E+01',
            '9.7859E+00',
            '2.1088E+01',
            '2.9214E+01',
            '2.0614E+01',
            '3.0428E+01',
            '3.3387E+01',
            '2.3679E+01',
            '4.0785E+01'
          ]
        ];



my $truestats=[
	[18.10000,17.56850,11.94400,43.97800,1.7300E+01,1.3475E+01,6.6809E+00,2.4774E+01,2.0800E+01,2.5140E+01,1.5116E+01,5.0334E+01,1.4200E+01,9.2489E+00,6.4175E+00,1.9882E+01,2.3900E+01,4.1326E+01,1.5458E+01,6.6126E+01],  
	[27.65000,21.23100,13.83400,32.72750,2.4300E+01,1.5815E+01,1.1532E+01,2.8790E+01,3.1700E+01,2.7772E+01,2.0128E+01,6.2750E+01,2.3800E+01,1.0677E+01,6.7787E+00,2.2681E+01,3.3000E+01,4.1460E+01,2.0312E+01,8.0823E+01]
	];

sub get_dv_matrix
{
	my $directory = shift;
  open (FILE, "$directory/m1/DV_matrix.csv");
  my @arr = <FILE>;
  close FILE;

  my @matrix=();
  foreach my $line (@arr){
	  chomp $line;
	  my @row = split ',',$line;
	  push(@matrix,\@row);
  }
  return \@matrix;
}
sub is_array{
    my $func=shift;
    my $facit=shift;
    my $label=shift;

    is (scalar(@{$func}),scalar(@{$facit}),"$label, equal length");

    my $min = scalar(@{$func});
    $min = scalar(@{$facit}) if (scalar(@{$facit})< $min);
    for (my $i=0; $i<$min; $i++){
    	cmp_ok ($func->[$i],'==',$facit->[$i],"$label, index $i");
    }		
	
}

sub get_stats
{
	my $directory = shift;
  open my $fh, "<", "$directory/vpc_results.csv";

  my @arr = <$fh>;
  close $fh;
  my @ans=();
  my $savenext=0;
  foreach my $line (@arr){
      chomp $line;
	  my $store=0;
      if ($line =~ /first interval is closed/){
		  $store=1;
		  $savenext=1;
      }elsif($savenext){
		  $store=1;
		  $savenext=0;
	  }
	  next unless $store;
	  my @arr = split(/\s*,\s*/,$line);

	  #pick up cells
#	  my @newarr = @arr[8 .. 27];
	  my @newarr = @arr[9 .. 28];
	  #print join(' ',@newarr)."\n\n";
	  push(@ans,\@newarr);
  }
  return \@ans;
}



my $model_dir = $includes::testfiledir;
#do not copy lst and ext here
copy_test_files($tempdir,["pheno5.mod", "pheno5.dta","vpc/orig.tab","vpc/sim.tab","vpc/simNID.tab"]);
chdir($tempdir);

my $command = get_command('vpc') . " -no-zip -samples=20 pheno5.mod -sim_table=sim.tab -orig_table=orig.tab -auto_bin=2 -directory=dir1 -seed=12345 -min_point=5";
system $command;

my $newmatrix = get_dv_matrix('dir1');

is (scalar(@{$newmatrix}),scalar(@{$truematrix}),"DV matrices, equal num rows");
my $num = scalar(@{$newmatrix});

for (my $i = 0; $i < $num; $i++) {
	is_array ($newmatrix->[$i],$truematrix->[$i],"DV matrix row index $i");
}

my $stats = get_stats('dir1');
for (my $i = 0; $i < 2; $i++){
	is_array ($stats->[$i],$truestats->[$i],"stats row index $i");
}

rmtree(['dir1']);

#use irep option and dummy model
$command = get_command('vpc') . " -no-zip -samples=20 -irep=NID -sim_table=simNID.tab -orig_table=orig.tab -auto_bin=2 -directory=dir2 -seed=12345 -min_point=5";
system $command;

$newmatrix = get_dv_matrix('dir2');

is (scalar(@{$newmatrix}),scalar(@{$truematrix}),"DV matrices, equal num rows");
$num = scalar(@{$newmatrix});

for (my $i = 0; $i < $num; $i++) {
	is_array ($newmatrix->[$i],$truematrix->[$i],"DV matrix row index $i");
}

$stats = get_stats('dir2');
for (my $i = 0; $i < 2; $i++){
	is_array ($stats->[$i],$truestats->[$i],"stats row index $i");
}

rmtree(['dir2']);



#split simulation over multiple tabs
$command = get_command('vpc') . " -no-zip -samples=20 pheno5.mod -auto_bin=2 -directory=dir3 -seed=12345 -min_point=5 -n_sim=2";
system $command;

$newmatrix = get_dv_matrix('dir3');

is (scalar(@{$newmatrix}), scalar(@{$truematrix2}), "DV matrices n_sim=2, equal num rows");

$num = scalar(@{$newmatrix});

for (my $i=0; $i< $num; $i++) {
	is_array ($newmatrix->[$i],$truematrix2->[$i],"DV matrix n_sim=2 row index $i");
}

remove_test_dir($tempdir);
done_testing();
