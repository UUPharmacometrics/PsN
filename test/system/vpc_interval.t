#!/etc/bin/perl

# Blackbox testing of vpc data MDV filtering, formatting to DV matrix and percentile calculation

use strict;
use warnings;
use File::Path 'rmtree';
use Test::More;
use FindBin qw($Bin);
use lib "$Bin/.."; #location of includes.pm
use includes; #file with paths to PsN packages and $path variable definition

our $tempdir = create_test_dir('system_vpcinterval');


my $truematrix=
[[1.7300E+01,1.5591E+01,2.0031E+01,1.3769E+01,1.7572E+01,1.3515E+01,4.1674E+01,2.6360E+01,9.6451E+00,4.4075E+01,1.1120E+01,2.2924E+01,2.9936E+01,1.4643E+01,1.5146E+01,3.2476E+01,2.2444E+01,1.7241E+01,3.6800E+01,2.0314E+01,1.3952E+01],
[3.1000E+01,1.8051E+01,5.3670E+00,2.7881E+01,3.0443E+01,2.0577E+01,3.6862E+01,1.6333E+01,2.0312E+01,5.5049E+01,6.7787E+00,1.7325E+01,2.8790E+01,2.2330E+01,3.4794E+01,1.8869E+01,4.1535E+01,2.5998E+01,4.4654E+01,2.1930E+01,2.3584E+01],
[9.7000E+00,1.0010E+01,6.6823E+00,2.5296E+01,1.1777E+01,8.2582E+00,9.1992E+00,1.0347E+01,9.0354E+00,2.4774E+01,3.6220E+00,2.2194E+01,7.1866E+00,1.2696E+01,1.2647E+01,1.5040E+01,8.5446E+00,1.3799E+01,1.1317E+01,1.1198E+01,9.7341E+00],
[2.4600E+01,1.2944E+01,1.7438E+01,3.5363E+01,1.9665E+01,1.9184E+01,2.0787E+01,2.0402E+01,1.2792E+01,4.3881E+01,6.4175E+00,9.2468E+00,2.0307E+01,1.5785E+01,1.8945E+01,5.5304E+00,3.0660E+01,1.4447E+01,1.3883E+01,1.3475E+01,1.1894E+01],
[3.3000E+01,1.5360E+01,2.8857E+01,4.1573E+01,1.4674E+01,2.1353E+01,1.8643E+01,2.3837E+01,1.3725E+01,2.7978E+01,1.1532E+01,1.1506E+01,2.2681E+01,2.8628E+01,3.1152E+01,7.1955E+00,3.4408E+01,1.2978E+01,2.9378E+01,2.8724E+01,1.6648E+01],
[1.8000E+01,3.1017E+01,2.7790E+01,1.2611E+01,4.2267E+01,6.3467E+01,1.7030E+01,3.1326E+01,1.2408E+01,1.9882E+01,2.8765E+01,4.4509E+01,2.3291E+01,1.7565E+01,7.6072E+01,2.6957E+01,2.4737E+01,1.8135E+01,9.9332E+00,9.5163E+01,4.4484E+01],
[2.3800E+01,7.4396E+01,1.7709E+01,1.8093E+01,3.8484E+01,2.7120E+01,1.3313E+01,2.6869E+01,7.8002E+00,2.0287E+01,3.5437E+01,2.7662E+01,5.1730E+01,1.4850E+01,1.0677E+01,2.5574E+01,1.9568E+01,2.4785E+01,2.2459E+01,3.6731E+01,2.1109E+01],
[2.4300E+01,6.2750E+01,1.5350E+01,1.8438E+01,8.0823E+01,3.9859E+01,2.0170E+01,4.1288E+01,8.5666E+00,2.5166E+01,3.8292E+01,5.1612E+01,4.0940E+01,2.0955E+01,1.5662E+01,1.6456E+01,2.7772E+01,3.0969E+01,2.4303E+01,4.1460E+01,2.5715E+01],
[2.0800E+01,9.5389E+00,1.5338E+01,1.4445E+01,2.5792E+01,1.3253E+01,2.5798E+01,2.7878E+01,1.3829E+01,6.9883E+01,1.2768E+01,3.9048E+01,2.5203E+01,2.0345E+01,2.5140E+01,3.9674E+01,1.0581E+01,1.1960E+01,1.9636E+01,9.6531E+00,1.2260E+01],
[2.3900E+01,1.0886E+01,2.6158E+01,1.8047E+01,9.2489E+00,7.6242E+00,2.1762E+00,9.1342E+00,1.5458E+01,1.4090E+01,6.6809E+00,1.5991E+01,3.8486E+01,1.8745E+01,2.5570E+01,3.5589E+01,8.2638E+00,1.0041E+01,2.1589E+01,1.0408E+01,1.9365E+01],
[3.1700E+01,1.7173E+01,2.1593E+01,1.8365E+01,1.2611E+01,4.2403E+00,2.5694E+00,4.3800E+00,2.0128E+01,1.4207E+01,4.2712E+00,1.4334E+01,3.5601E+01,2.2856E+01,1.7276E+01,4.7450E+01,1.3094E+01,1.0465E+01,1.8011E+01,2.0041E+01,2.2084E+01],
[1.4200E+01,2.8140E+01,3.1147E+01,1.8272E+01,2.7887E+01,1.0598E+01,2.3642E+01,1.9953E+01,1.9108E+01,6.6126E+01,3.2380E+01,5.3485E+01,3.9172E+01,4.9668E+01,4.1326E+01,1.7834E+01,1.6922E+01,1.3200E+01,4.2711E+01,4.0441E+01,1.5312E+01],
[1.8200E+01,3.1659E+01,3.3038E+01,1.1651E+01,1.4606E+01,1.5116E+01,1.4372E+01,1.4196E+01,1.5405E+01,5.0334E+01,1.9695E+01,2.2798E+01,3.8542E+00,1.3561E+01,4.1500E+01,2.2815E+01,1.4941E+01,1.6497E+01,9.7226E+00,3.4961E+01,1.3322E+01],
[2.0300E+01,2.4413E+01,2.6872E+01,1.5122E+01,1.3011E+01,1.5815E+01,1.4066E+01,1.1707E+01,1.3943E+01,5.8246E+01,2.3638E+01,1.3089E+01,2.8958E+00,1.4803E+01,3.3724E+01,2.7012E+01,2.7838E+01,1.2594E+01,8.0155E+00,4.3732E+01,1.4615E+01]
];

$truematrix2 = [
          [
            '1.7300E+01',
            '1.4275E+01',
            '1.8025E+01',
            '2.0988E+01',
            '6.7212E+01',
            '6.1204E+01',
            '3.1638E+01',
            '1.3757E+01',
            '2.0286E+01',
            '1.0638E+01',
            '1.3530E+01',
            '1.5002E+01',
            '2.7135E+01',
            '2.9846E+01',
            '1.3644E+01',
            '1.4387E+01',
            '2.3309E+01',
            '1.3689E+01',
            '2.8257E+01',
            '8.0303E+00',
            '5.8719E+00'
          ],
          [
            '3.1000E+01',
            '5.5033E+00',
            '8.2571E+00',
            '2.0836E+01',
            '8.8658E+00',
            '2.2782E+01',
            '5.5753E+01',
            '2.6094E+01',
            '1.4426E+01',
            '1.8606E+01',
            '2.6085E+01',
            '1.9188E+01',
            '6.3753E+01',
            '2.3050E+01',
            '3.0002E+01',
            '2.2294E+01',
            '7.7640E+00',
            '1.1472E+01',
            '3.6168E+01',
            '1.3059E+01',
            '3.2097E+01'
          ],
          [
            '9.7000E+00',
            '2.2792E+01',
            '7.2054E+00',
            '3.4509E+01',
            '1.4251E+01',
            '1.3724E+01',
            '1.6773E+01',
            '1.3570E+01',
            '1.6404E+01',
            '6.3527E+01',
            '1.6018E+01',
            '9.9016E+00',
            '5.1627E+00',
            '1.3763E+01',
            '1.9326E+01',
            '1.0032E+01',
            '1.7149E+01',
            '1.1977E+01',
            '1.6357E+01',
            '2.2700E+01',
            '3.0493E+01'
          ],
          [
            '2.4600E+01',
            '2.0563E+01',
            '1.1668E+01',
            '1.3272E+01',
            '1.4177E+01',
            '2.1653E+01',
            '1.3975E+01',
            '1.9795E+00',
            '1.9985E+01',
            '2.8553E+01',
            '2.9148E+01',
            '1.9940E+01',
            '1.3056E+01',
            '1.7761E+01',
            '1.5625E+01',
            '1.8980E+01',
            '1.1083E+01',
            '1.3428E+01',
            '9.6844E+00',
            '3.2446E+01',
            '4.8394E+01'
          ],
          [
            '3.3000E+01',
            '2.4143E+01',
            '1.3433E+01',
            '1.5902E+01',
            '2.0948E+01',
            '2.7896E+01',
            '7.6882E+00',
            '2.8649E+00',
            '4.7519E+01',
            '3.3890E+01',
            '5.3874E+01',
            '1.8147E+01',
            '2.4642E+01',
            '2.4401E+01',
            '8.3534E+00',
            '1.2181E+01',
            '1.0127E+01',
            '1.5887E+01',
            '6.3476E+00',
            '3.5235E+01',
            '3.9573E+01'
          ],
          [
            '1.8000E+01',
            '4.1529E+01',
            '1.8442E+01',
            '2.0797E+01',
            '4.0747E+01',
            '2.5315E+01',
            '4.5537E+01',
            '2.4112E+01',
            '1.6145E+01',
            '3.9511E+01',
            '3.0761E+01',
            '2.2110E+01',
            '8.6271E+00',
            '4.4214E+01',
            '2.9161E+01',
            '2.9231E+01',
            '2.3995E+01',
            '2.3070E+01',
            '2.9535E+01',
            '2.8264E+01',
            '1.0916E+01'
          ],
          [
            '2.3800E+01',
            '2.5514E+01',
            '2.2876E+01',
            '2.8600E+01',
            '1.7547E+01',
            '6.4024E+00',
            '3.0363E+01',
            '2.7533E+01',
            '1.9120E+01',
            '9.5319E+00',
            '1.7272E+01',
            '7.3682E+00',
            '1.9370E+01',
            '4.0274E+01',
            '1.3595E+01',
            '2.5651E+01',
            '5.0556E+00',
            '4.9680E+01',
            '1.4006E+01',
            '9.4498E+00',
            '1.8499E+01'
          ],
          [
            '2.4300E+01',
            '1.8349E+01',
            '3.4314E+01',
            '2.4045E+01',
            '3.7537E+01',
            '1.1915E+01',
            '2.6634E+01',
            '3.8532E+01',
            '2.0870E+01',
            '1.3793E+01',
            '2.0689E+01',
            '8.5325E+00',
            '1.4121E+01',
            '4.1428E+01',
            '1.3883E+01',
            '3.7783E+01',
            '7.7761E+00',
            '5.4993E+01',
            '1.5752E+01',
            '1.0104E+01',
            '2.8760E+01'
          ],
          [
            '2.0800E+01',
            '1.8463E+01',
            '3.2974E+01',
            '4.1552E+01',
            '2.4555E+01',
            '2.1378E+01',
            '1.1967E+01',
            '2.2240E+01',
            '1.9058E+01',
            '2.7000E+01',
            '2.2022E+01',
            '2.4871E+01',
            '9.0759E+00',
            '1.3880E+01',
            '1.5600E+01',
            '2.3987E+01',
            '2.5969E+01',
            '5.3561E+01',
            '1.4068E+01',
            '3.4677E+01',
            '3.1756E+01'
          ],
          [
            '2.3900E+01',
            '3.2261E+01',
            '1.7521E+01',
            '4.5901E+01',
            '1.4818E+01',
            '1.7459E+01',
            '8.4840E+00',
            '1.5812E+01',
            '1.4109E+01',
            '2.3013E+00',
            '3.1735E+01',
            '1.9684E+01',
            '2.3366E+01',
            '1.4301E+01',
            '1.7154E+01',
            '2.0181E+01',
            '1.6791E+01',
            '9.4201E+00',
            '1.3712E+01',
            '2.5475E+01',
            '2.4334E+01'
          ],
          [
            '3.1700E+01',
            '3.9402E+01',
            '1.1292E+01',
            '3.5634E+01',
            '1.3581E+01',
            '2.2103E+01',
            '8.9608E+00',
            '1.1973E+01',
            '2.3959E+01',
            '1.3334E+00',
            '4.0609E+01',
            '3.1832E+01',
            '2.5529E+01',
            '1.4022E+01',
            '1.3303E+01',
            '3.6390E+01',
            '1.0481E+01',
            '1.0618E+01',
            '1.8722E+01',
            '2.3203E+01',
            '2.4561E+01'
          ],
          [
            '1.4200E+01',
            '2.1367E+01',
            '3.8308E+01',
            '1.5379E+01',
            '2.4544E+01',
            '1.7015E+01',
            '2.2685E+01',
            '3.4156E+01',
            '1.1739E+01',
            '2.7503E+01',
            '8.5003E+00',
            '2.9709E+01',
            '2.2510E+01',
            '2.5253E+01',
            '9.9948E+00',
            '1.5639E+01',
            '1.1703E+01',
            '8.0941E+00',
            '2.8098E+01',
            '7.7290E+01',
            '2.2121E+01'
          ],
          [
            '1.8200E+01',
            '6.9439E+00',
            '2.9329E+01',
            '1.8593E+01',
            '1.3025E+01',
            '1.5593E+01',
            '1.4670E+01',
            '3.0665E+01',
            '1.2933E+01',
            '1.1288E+01',
            '1.9667E+01',
            '2.2844E+01',
            '3.0520E+01',
            '2.3682E+01',
            '9.4457E+00',
            '1.5625E+01',
            '1.7381E+01',
            '1.2648E+01',
            '1.4344E+01',
            '3.7854E+01',
            '2.1696E+01'
          ],
          [
            '2.0300E+01',
            '5.5780E+00',
            '2.2605E+01',
            '2.1801E+01',
            '1.1458E+01',
            '1.2309E+01',
            '1.0278E+01',
            '2.0605E+01',
            '1.2834E+01',
            '8.5983E+00',
            '1.5766E+01',
            '1.9933E+01',
            '2.6527E+01',
            '2.3289E+01',
            '2.0909E+01',
            '1.1803E+01',
            '1.8678E+01',
            '2.6815E+01',
            '1.1507E+01',
            '3.7194E+01',
            '1.9496E+01'
          ]
        ];


my $truestats=[
	[18.10000,17.56850,11.94400,43.97800,1.7300E+01,1.3475E+01,6.6809E+00,2.4774E+01,2.0800E+01,2.5140E+01,1.5116E+01,5.0334E+01,1.4200E+01,9.2489E+00,6.4175E+00,1.9882E+01,2.3900E+01,4.1326E+01,1.5458E+01,6.6126E+01],  
	[27.65000,21.23100,13.83400,32.72750,2.4300E+01,1.5815E+01,1.1532E+01,2.8790E+01,3.1700E+01,2.7772E+01,2.0128E+01,6.2750E+01,2.3800E+01,1.0677E+01,6.7787E+00,2.2681E+01,3.3000E+01,4.1460E+01,2.0312E+01,8.0823E+01]
	];

sub get_dv_matrix
{
	my $directory = shift;
  open (FILE, "$directory/m1/DV_matrix.csv");
  my @arr = <FILE>;
  close FILE;

  my @matrix=();
  foreach my $line (@arr){
	  chomp $line;
	  my @row = split ',',$line;
	  push(@matrix,\@row);
  }
  return \@matrix;
}
sub is_array{
    my $func=shift;
    my $facit=shift;
    my $label=shift;

    is (scalar(@{$func}),scalar(@{$facit}),"$label, equal length");

    my $min = scalar(@{$func});
    $min = scalar(@{$facit}) if (scalar(@{$facit})< $min);
    for (my $i=0; $i<$min; $i++){
    	cmp_ok ($func->[$i],'==',$facit->[$i],"$label, index $i");
    }		
	
}

sub get_stats
{
	my $directory = shift;
  open my $fh, "<", "$directory/vpc_results.csv";

  my @arr = <$fh>;
  close $fh;
  my @ans=();
  my $savenext=0;
  foreach my $line (@arr){
      chomp $line;
	  my $store=0;
      if ($line =~ /first interval is closed/){
		  $store=1;
		  $savenext=1;
      }elsif($savenext){
		  $store=1;
		  $savenext=0;
	  }
	  next unless $store;
	  my @arr = split(/\s*,\s*/,$line);

	  #pick up cells
#	  my @newarr = @arr[8 .. 27];
	  my @newarr = @arr[9 .. 28];
	  #print join(' ',@newarr)."\n\n";
	  push(@ans,\@newarr);
  }
  return \@ans;
}



my $model_dir = $includes::testfiledir;
#do not copy lst and ext here
copy_test_files($tempdir,["pheno5.mod", "pheno5.dta","vpc/orig.tab","vpc/sim.tab","vpc/simNID.tab"]);
chdir($tempdir);

my $command = get_command('vpc') . " -no-zip -samples=20 pheno5.mod -sim_table=sim.tab -orig_table=orig.tab -auto_bin=2 -directory=dir1 -seed=12345 -min_point=5";
system $command;

my $newmatrix = get_dv_matrix('dir1');

is (scalar(@{$newmatrix}),scalar(@{$truematrix}),"DV matrices, equal num rows");
my $num = scalar(@{$newmatrix});

for (my $i = 0; $i < $num; $i++) {
	is_array ($newmatrix->[$i],$truematrix->[$i],"DV matrix row index $i");
}

my $stats = get_stats('dir1');
for (my $i = 0; $i < 2; $i++){
	is_array ($stats->[$i],$truestats->[$i],"stats row index $i");
}

rmtree(['dir1']);

#use irep option and dummy model
$command = get_command('vpc') . " -no-zip -samples=20 -irep=NID -sim_table=simNID.tab -orig_table=orig.tab -auto_bin=2 -directory=dir2 -seed=12345 -min_point=5";
system $command;

$newmatrix = get_dv_matrix('dir2');

is (scalar(@{$newmatrix}),scalar(@{$truematrix}),"DV matrices, equal num rows");
$num = scalar(@{$newmatrix});

for (my $i = 0; $i < $num; $i++) {
	is_array ($newmatrix->[$i],$truematrix->[$i],"DV matrix row index $i");
}

$stats = get_stats('dir2');
for (my $i = 0; $i < 2; $i++){
	is_array ($stats->[$i],$truestats->[$i],"stats row index $i");
}

rmtree(['dir2']);



#split simulation over multiple tabs
$command = get_command('vpc') . " -no-zip -samples=20 pheno5.mod -auto_bin=2 -directory=dir3 -seed=12345 -min_point=5 -n_sim=2";
system $command;

$newmatrix = get_dv_matrix('dir3');

is (scalar(@{$newmatrix}), scalar(@{$truematrix2}), "DV matrices n_sim=2, equal num rows");

$num = scalar(@{$newmatrix});

for (my $i=0; $i< $num; $i++) {
	is_array ($newmatrix->[$i],$truematrix2->[$i],"DV matrix n_sim=2 row index $i");
}

remove_test_dir($tempdir);
done_testing();
