#!/usr/bin/perl

use FindBin qw($Bin);
use lib "$Bin/../lib";

# Don't edit the line below, it must look exactly like this.
# Everything above this line will be replaced #

use PsN;
use strict;
use Getopt::Long;
use common_options;
use Cwd;
use ui;
# More PsN dependencies included with require further down

my $cmd_line = $0 . " " . join( " ", @ARGV );

## Configure the command line parsing
Getopt::Long::config("auto_abbrev");

my %options;
## Declare the options

my %required_options = ();

#option etas is not implemented, bootstrap always done on all etas
my %optional_options = (
    'dvid:s' => undef,
    'dv:s' => undef,
    'idv:s' => undef,
    'occ:s' => undef,
    'iterative!' => undef,
    'max_iterations:i' => undef,
    'groups:i' => undef,
    'obs_column:s' => undef,
);

my $res = GetOptions( \%options,
    @common_options::get_opt_strings,
    keys(%required_options),
    keys(%optional_options) );
exit unless $res;



my %help_text;

	$help_text{Pre_help_message} = <<'EOF';
  Residual modelling
EOF
    
	$help_text{Description} = <<'EOF';
    The resmod (residual modelling) tool performs modelling of the conditional weighted 
	residual output of a model run. Different types of models are run and changes in OFV 
	will be recorded together with some parameters of interest. The resmod tool is not 
	compatible with NONMEM 7.2 or older versions.
EOF

	$help_text{Examples} = <<'EOF';
	resmod run1.mod
EOF

	$help_text{Options} = <<'EOF';
	A model file is required on the command line, 

	The following options are valid:
EOF
	$help_text{-h} = <<'EOF';
      -h | -?
      
      With -h or -? resmod will print a list of options and exit.
EOF
      
	$help_text{-help} = <<'EOF';      
      -help
      
      With -help resmod will print this, longer, help message.
EOF

	$help_text{-dv} = <<'EOF';
      -dv

      Default CWRES. Name of the dependent variable. 
EOF

	$help_text{-dvid} = <<'EOF';
      -dvid

      Default DVID. Name of the dvid column. 
EOF

	$help_text{-groups} = <<'EOF';
      -groups=N

      Default is 4. Set the number of groups to use for the time varying models. Quantiles using 
	  this number will be calculated.
      
EOF

	$help_text{-idv} = <<'EOF';
      -idv

      Default TIME. Name of the independent variable. If set to PRED PsN will rename it appropriately
	  so that it can be used in \$INPUT.
EOF

	$help_text{-iterative} = <<'EOF';
      -iterative

      Set if an iterative process is wanted. The iteration is to pick the model with best dOFV
      and rerun all models with the CWRES output from that model etc until all models have been 
	  picked.
EOF

	$help_text{-max_iterations} = <<'EOF';
      -max_iterations

      Default is no limit. Limit the maximum number of steps in the iterative procedure. 
      
EOF

	$help_text{-obs_column} = <<'EOF';
      -obs_column

      The default is to same as -dv. Use this column to ignore non-observations. All zero entries
      in this column will be interpreted as a non-observation.
      
EOF

	$help_text{-occ} = <<'EOF';
      -occ

      Default OCC. Name of the occasion column. 
EOF

common_options::online_help( 'resmod', \%options, \%help_text, \%required_options, \%optional_options);
common_options::setup( \%options, 'resmod' ); #calls set_globals etc, initiates random sequence

## Check that we do have a model file
if (scalar(@ARGV) < 1) {
  print "A model file must be specified. Use 'resmod -h' for help.\n";
  exit;
}

if( scalar(@ARGV) > 1) {
  print "resmod can only handle one modelfile, you listed: ",
  join(',',@ARGV),". Use 'resmod -h' for help.\n";die;
  exit;
}

ui -> category( 'resmod' );
ui -> silent(1) if ($options{'silent'});

require model;
require tool::resmod;

my $eval_string = common_options::model_parameters(\%options);

my $model = model->new(
    eval($eval_string),
    filename => $ARGV[0],
    ignore_missing_output_files => 1,
    ignore_missing_data => 1,
);

if (not defined $options{'iterative'}) {
    $options{'iterative'} = 0;
}

my $resmod = tool::resmod->new(
    eval( $common_options::parameters ),
    models => [$model],
    dvid => $options{'dvid'},
    idv => $options{'idv'},
    dv => $options{'dv'},
	occ => $options{'occ'},
    iterative => $options{'iterative'},
    groups => $options{'groups'},
    max_iterations => $options{'max_iterations'},
    obs_column => $options{'obs_column'},
);

$resmod->print_options(
    cmd_line => $cmd_line,
    toolname => 'resmod',
    local_options => [keys %optional_options],
    common_options => \@common_options::tool_options
);

$resmod -> run();
$resmod -> print_results();

ui -> print(category => 'resmod', message  => "Residual modelling done.\n");
