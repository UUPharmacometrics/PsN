#!/usr/bin/perl

use FindBin qw($Bin);
use lib "$Bin/../lib";

# Don't edit the line below, it must look exactly like this.
# Everything above this line will be replaced #

use PsN;
use strict;
use Getopt::Long;
use common_options;
use Cwd;
use OSspecific;
use ui;
# More PsN dependencies included with require further down

my $cmd_line = $0 . " " . join( " ", @ARGV );

## Configure the command line parsing
Getopt::Long::config("auto_abbrev");

my %options;
## Declare the options

my %required_options = ('covariates:s');
my %optional_options = (
    'check!' => undef,
    'rescale!' => undef,
    'fork_runs!' => undef,
    'estimate_means!' => undef,
    'estimate_covariates!' => undef,
    'categorical:s' => undef,
    'deriv2_nocommon_maxeta:i' => undef,
    "mceta:i"=>'',
    'log:s' => undef,
    'rse:f' => undef,
    'run_sir!' => undef,
    'imp_covariance!' => undef,
    'mu' => undef,
    'cholesky!' => undef,
    'always_proposal_density!' => undef,
    'skip_omegas:s' => undef,
);

my $res = GetOptions( \%options,
              @common_options::get_opt_strings,
              keys(%required_options),
              keys(%optional_options) );
exit unless $res;

my %help_text;

$help_text{Pre_help_message} = <<'EOF';
	Full Random Effects Model
EOF

$help_text{Description} = <<'EOF';

	The frem program builds a full random effects model (FREM) for covariate
	model building. M. O. Karlsson. "A full model approach based on the covariance
	matrix of parameters and covariates." In: PAGE 21 (2012) Abstr 2455 (2012),
	V. Ivaturi, R. Keizer, and M. O. Karlsson. "A Full Random Effects Model for
	Characterising Covariate Relations.", H. Yun et al."Evaluation of FREM and FFEM
	including use of model linearization.". In: PAGE 22 (2013) Abstr 2900 (2013).
	Selection of covariates of interest is made without concern regarding their
	correlation.
	Covariates are entered into the data set as observed variables, and their
	multivariate distribution are modeled as random effects. A full covariance
	matrix between random effects for parameters and covariates is estimated
	together with the other model components.
	It can be difficult to get successful estimation of the full covariance matrix
	if all FREM components are entered directly. The frem program builds the full
	model in a sequence of steps, using estimates from one step as initial estimates
	for the next.
	The program step by step builds a model with full random effects.
EOF

$help_text{Examples} = <<'EOF';
	frem run1.mod -covariates=WT,SEX,DGRP -categorical=SEX,DGRP
EOF

$help_text{Options} = <<'EOF';
	A model file is required as argument.

	The following options are valid:
EOF

$help_text{-h} = <<'EOF';
	-h | -?

	With -h or -? frem will print a list of options and exit.
EOF

$help_text{-help} = <<'EOF';
-help

	With -help frem will print this, longer, help message.
EOF

$help_text{-always_proposal_density} = <<'EOF';
	-always_proposal_density

	Default set. If set then print alternative proposal density to use as input
	to sir even if Model 4 covstep is successful.
    Unset with -no-always_proposal_density.
EOF

$help_text{-categorical} = <<'EOF';
	-categorical=list

	Default empty. A comma-separated list of non-ordered categorical covariates.
	These will be automatically transformed from one covariate with Y categories
	into Y-1 bivariate covariates, if Y>2. Missing values are not counted as a
	category. The -categorical list must be a subset of the -covariate list. If
	any covariate listed with option -categorical is not in the list -covariates
	there will be an error message.
	There must be no covariate listed with both -categorical and -log.
EOF

$help_text{-check} = <<'EOF';
	-check

	Default not set. Run evaluation with frem records ignored after frem data
	set generation, to check ofv is the same.
EOF

$help_text{-cholesky} = <<'EOF';
	-cholesky

	Default not set. If set then script will create and estimate Model 5 and
	Model 6.
EOF

$help_text{-covariates} = <<'EOF';
	-covariates=list

	A comma-separated list of covariates, required. Must be the names used in
	$INPUT, the data file headers are ignored.
EOF

#Optional if -time_varying is given, not allowed if restarting an old run, otherwise required.

$help_text{-deriv2_nocommon_maxeta} = <<'EOF';
	-deriv2_nocommon_maxeta=N

	Default 60. If the number of ETAs in model 2 is larger than this number then
	$ABBREVIATED DERIV2=NOCOMMON will be set in the control stream.
EOF
#$help_text{-dv} = <<'EOF';
#-dv=name
#Default is DV. The name of the dependent variable. This must be the name used in $INPUT,
#the data file header is ignored.
#EOF

$help_text{-estimate_covariates} = <<'EOF';
	-estimate_covariates

	Default not set. By default FREM will not estimate the variances and
	covariances of the covariates until the final FREM model estimation, but
	instead evaluate the EBEs (in Model 2) assuming the same variances and
	covariances as in covariate data. These estimates should not differ unless
	covariates have missing data (which might warrant this option to be set).
	Setting this means that Model 2 is estimated which in some cases can be
	time-consuming.
EOF

$help_text{-estimate_means} = <<'EOF';
	-estimate_means

	Default set. By default frem will estimate the mean values of the covariates
	which have any missing observations in the FREM dataset. Note that the FREM
	dataset contains covariate observations only from the first original data
	observation record for each individual. If no covariate observations are
	missing in the frem dataset then the mean will not be estimated, even if
	option -estimate_means is set. If -no-estimate_means is set, frem will not
	estimate any means even if there are missing observations.
EOF

#$help_text{-estimate} = <<'EOF';
#-estimate=number
#Default 3. The number (0, 1, 2 or 3) of the last model to estimate in the frem sequence. All models with a higher number
#will still be created, but not estimated. When restarting in an existing frem run directory, estimation of models that have an existing
#st-file will be skipped even if the -estimate option is set to a higher number.
#EOF
#$help_text{-estimate_regular_final_model} = <<'EOF';
#-estimate_regular_final_model
#Default set. If set then script will estimate the final regular parameterization frem model,
#otherwise the model will be created but not estimated.
#EOF

$help_text{-fork_runs} = <<'EOF';
	-fork_runs

	Default not set. Fork out separate processes for all output parsing. Will
	only work on unix-like systems. Only relevant if output objects are very,
	very large.
EOF

#$help_text{-invariant} = <<'EOF';
#-invariant=list
#EOF

$help_text{-log} = <<'EOF';
	-log=list

	Default empty. A comma-separated list of covariates    that should have the
	natural logarithm of the input data set value as the observed value in the DV
	column of the frem dataset. The -log list must be a subset of the -covariate
	list. If any covariate listed with option -log is not in the list -covariates
	there will be an error message. There must be no covariate listed with both
	log and -categorical.
EOF

$help_text{-mceta} = <<'EOF';
	-mceta=N

	Default not set. If NONMEM 7.3 or later is used, and the last estimation record
	accepts MCETA option, set MCETA to this value in last $EST of Model 2 and
	later.
EOF

$help_text{-mu} = <<'EOF';
	-mu

	Default not set. If set then use mu-modelling for frem-added covariate THETAs
	and ETAs. Pre-existing 	mu-modelling is not compatible with reordering of
	skipped omegas, because frem will then renumber ETAs but not MU variables,
	so if mu-modelling is used, the user must ensure that omegas are already ordered
    so that any skipped omegas come first.
EOF

#$help_text{-occasion} = <<'EOF';
#-occation=name
#Default OCC. The name of the column that defines occasions. Name used in $INPUT.
#Needed if -time_varying is set, otherwise ignored.
#EOF

#$help_text{ordered}{?}
#{\Large \texttt{TODO special case for ordered categorical}}
#EOF

#$help_text{-parameters_bov} = <<'EOF';
#-parameters_bov=list
#A comma-separated list of model parameters that should have between-occasion variability.
#Required if -time_varying is set, otherwise not allowed.
#EOF

$help_text{-rescale} = <<'EOF';
	-rescale

	Default set. Rescale covariate ETAs in Model 2 to SD close to 1. Unset with
	-no-rescale.
EOF
#help_text {-rplots} = <<'EOF';
#-rplots=level
#in order to facilitate estimation.
#$help_text{rplots}{level}
#{Large texttt{Later}}
#EOF

$help_text{-rse} = <<'EOF';
	-rse=number

	Default 30%.
	If the covariance step of both Model 4 and either/both of Model 1 and Model 2
	fails, then this is the guess of relative standard error that will be used for
	parameters for which there is no other information that can be used to guess
	the variance needed for a proposal density for a sir run with Model 4.
EOF

$help_text{-imp_covariance} = <<'EOF';
	-imp_covariance

	Default set. If set run Model 4b with updated inits and additional importance
	sampling, expectation only, step before covariance step to attain uncertainty
	(if Model 4 covariance step fails).
EOF

$help_text{-run_sir} = <<'EOF';
	-run_sir

	Default not set. If set and covariance step of Model 4 fails, run sir to
	obtain standard errors of parameters. If covariance step of Model 4 is
	successful, sir will not be run even if option -run_sir is set.
EOF

$help_text{-skip_omegas} = <<'EOF';
	-skip_omegas=list

	A comma-separated list of the $OMEGA records that should be excluded when
	covariances between original model ETAs and new covariate ETAs are estimated.
	Numbering starts at 1. Numbering goes strictly by the text $OMEGA in the
	control stream, without concern about the type or size of the record. OMEGAs
	for BOV ETAs will be automatically skipped, even if option -skip_omegas was
	not set.
EOF

#$help_text{time\_varying} = <<'EOF';
#-time_varying=list
#A comma-separated list of time-varying covariates.
#Names used in $INPUT. Optional if -invariant is given, not allowed if restarting an old run, otherwise required.
#EOF
#$help_text{-vpc} = <<'EOF';
#-vpc
#Default not set. If set then script will create a frem model that
#can be run with the vpc script (in a separate call to the vpc
#script).
#EOF
$help_text{Post_help_message} = <<'EOF';
	Also see 'psn_options -h' for a description of common PsN options.
EOF

common_options::online_help( 'frem', \%options, \%help_text, \%required_options, \%optional_options);
common_options::setup( \%options, 'frem' ); #get defaults,
#calls set_globals etc, initiates random sequence


## Check that we do have a model file
if (scalar(@ARGV) < 1) {
  print "An input model file must be specified. Use 'frem -h' for help.\n";
  die;
}

if (scalar(@ARGV) > 1) {
  print "FREM can only handle one modelfile, you listed: ", join(',',@ARGV),". Use 'frem -h' for help.\n";
  die;
}

require model;

my $eval_string = common_options::model_parameters(\%options);

my $model = model->new(
    eval($eval_string),
    parse_output => 0,
    filename => $ARGV[0],
    ignore_missing_output_files => 1
);

require input_checking;
input_checking::check_options(tool => 'frem', options => \%options, model => $model);

require tool::frem;

my $frem = tool::frem->new(
    eval( $common_options::parameters ),
    models => [ $model ],
    top_tool => 1,
    covariates => $options{'covariates'},
    categorical => $options{'categorical'},
    estimate_means => $options{'estimate_means'},
    estimate_covariates => $options{'estimate_covariates'},
    cholesky => $options{'cholesky'},
    deriv2_nocommon_maxeta => $options{'deriv2_nocommon_maxeta'},
    log => $options{'log'},
    rse => $options{'rse'},
    mu => $options{'mu'},
    fork_runs => $options{'fork_runs'},
    always_proposal_density => $options{'always_proposal_density'},
    skip_omegas => $options{'skip_omegas'},
    check => $options{'check'},
    mceta => $options{'mceta'},
    rescale => $options{'rescale'},
    vpc => $options{'vpc'},
    run_sir => $options{'run_sir'},
    imp_covariance => $options{'imp_covariance'},
);

$frem->print_options(
    cmd_line => $cmd_line,
    toolname => 'frem',
    local_options => [keys %optional_options],
    common_options => \@common_options::tool_options
);

$frem->run;
if ($frem->estimate_regular_final_model and !$frem->cholesky) {
    my $err = $frem->prepare_results();
    if ($err) {
        print("Result generation err (no file could be generated):\n");
        print("$err\n");
    } else {
        $frem->print_results();
    }
}

if ($frem->vpc and -e $frem->directory . 'frem_vpc.mod') {
    ui->print(category => 'frem', message => "The prepared frem vpc model is " . $frem->directory . "frem_vpc.mod\n");
}

ui->print(category => 'frem', message => "frem done\n");
